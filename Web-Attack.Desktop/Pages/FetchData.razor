@page "/fetchdata"
@using Web_Attack.Common.Models.Response


@inject AdminService adminService

<h1>User List</h1>

<p>This component demonstrates fetching users from a service.</p>

@if (userLists == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Username</th>
                <th>Email</th>
                <th>Role</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in userLists)
            {
                <tr>
                    <td>@user.UserName</td>
                    <td>@user.Email</td>
                    <td>@user.Role</td>
                    <button class="btn btn-primary"
                            @onclick="(() => EditForecast(user))">
                        Edit
                    </button>
                </tr>
            }
        </tbody>
    </table>
    @if (ShowPopup)
    {
        <!-- This is the popup to create or edit a forecast -->
        <div class="modal" tabindex="-1" style="display:block" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title">Edit Forecast</h3>
                        <!-- Button to close the popup -->
                        <button type="button" class="close"
                                @onclick="ClosePopup">
                            <span aria-hidden="true">X</span>
                        </button>
                    </div>
                    <!-- Edit form for the current forecast -->
                    <div class="modal-body">
                        <input class="form-control" type="text"
                               placeholder="Celsius forecast"
                               @bind="userToUpdate.UserName" />
                        <input class="form-control" type="text"
                               placeholder="Fahrenheit forecast"
                               @bind="userToUpdate.Email" />
                        <input class="form-control" type="text"
                               placeholder="Summary"
                               @bind="userToUpdate.Role" />
                        <br />
                        <!-- Button to save the forecast -->
                        <button class="btn btn-primary"
                                @onclick="SaveForecast">
                            Save
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
}

@code {
    private List<UserListDto> userLists = new List<UserListDto>();
    UserListDto userToUpdate = new UserListDto();
    protected override async Task OnInitializedAsync()
    {
        userLists = await adminService.GetUsersAsync();
    }

    bool ShowPopup = false;
    void ClosePopup()
    {
        // Close the Popup
        ShowPopup = false;
    }

    async Task SaveForecast()
    {
        ShowPopup = false;
        var result = await adminService.UpdateUserAsync(userToUpdate);
    }

    void EditForecast(UserListDto user)
    {
        // Set the selected forecast
        // as the current forecast
        userToUpdate = user;
        // Open the Popup
        ShowPopup = true;
    }
}
